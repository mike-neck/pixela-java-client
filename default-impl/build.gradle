plugins {
    id 'java-library'
    id 'jacoco'
    id 'maven'
    id 'signing'
}

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11


tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    api project(':pixela-java-client-api')
    compileClasspath "org.jetbrains:annotations:13.0"

    implementation "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jacksonVersion"

    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: junitVersion
    testRuntimeClasspath "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '2.23.4'
    testImplementation group: 'io.projectreactor', name: 'reactor-test', version: reactorVersion
    testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.11.1'
    testRuntimeClasspath group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.25'
    testImplementation group: 'net.javacrumbs.json-unit', name: 'json-unit-assertj', version: '2.2.0'
}

test {
    useJUnitPlatform()
}

jacoco {
    toolVersion = '0.8.2'
}

task sourcesJar(type: Jar, group: 'publish') {
    classifier = 'sources'
    from project.sourceSets.main.allSource
}

task javadocJar(type: Jar, group: 'publish') {
    dependsOn 'javadoc'
    from tasks.javadoc
    classifier = 'javadoc'
}

if (canPublish) {
    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment {MavenDeployment deployment ->
                    signing.signPom(deployment)
                }
                repository(url: sonatypeUrl) {
                    authentication userName: sonatypeUsername, password: sonatypePassword
                }
                pom.project {
                    name('pixela-java-client-api')
                    packaging 'jar'
                    description 'pixela-java-client API'
                    url 'https://github.com/mike-neck/pixela-java-client'
    
                    scm {
                        connection 'scm:git:https://github.com/mike-neck/pixela-java-client'
                        developerConnection 'scm:git:https://github.com/mike-neck/pixela-java-client'
                        url 'https://github.com/mike-neck/pixela-java-client'
                    }
    
                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
    
                    developers {
                        developer {
                            id 'mikeneck'
                            name 'Shinya Mochida'
                            email 'jkrt3333[at]gmail.com'
                        }
                    }
                }
            }
        }
    }
}

signing {
    sign(project.configurations.archives)
}

artifacts {
    add('archives', javadocJar)
    add('archives', sourcesJar)
}
