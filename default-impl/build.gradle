plugins {
    id 'java-library'
    id 'jacoco'
    id 'maven'
    id 'signing'
    id "com.github.ben-manes.versions" version "0.21.0"
}

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11


tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    api project(':pixela-java-client-api')
    compileClasspath "org.jetbrains:annotations:$jetbrainsAnnotationsVersion"

    implementation "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jacksonVersion"

    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junitVersion"
    testRuntimeClasspath "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "io.projectreactor:reactor-test:$reactorVersion"
    testImplementation "org.assertj:assertj-core:$assertjVersion"
    testRuntimeClasspath "org.slf4j:slf4j-simple:$slf4jSimpleVersion"
    testImplementation "net.javacrumbs.json-unit:json-unit-assertj:$jsonUnitAssertjVersion"

    testCompileClasspath "org.jetbrains:annotations:$jetbrainsAnnotationsVersion"
}

test {
    useJUnitPlatform()
}

jacoco {
    toolVersion = '0.8.2'
}

task sourcesJar(type: Jar, group: 'publish') {
    archiveClassifier.set('sources')
    from project.sourceSets.main.allSource
}

task javadocJar(type: Jar, group: 'publish') {
    dependsOn 'javadoc'
    from tasks.javadoc
    archiveClassifier.set('javadoc')
}

signing {
    sign(project.configurations.archives)
}

artifacts {
    add('archives', javadocJar)
    add('archives', sourcesJar)
}

apply from: rootProject.file('dep.gradle')
apply from: rootProject.file('upload.gradle')
