import org.mikeneck.DependencyUpdatesSlackNotificationTask

plugins {
    id 'jacoco'
}

ext {
    junitVersion = '5.4.0'
    jacksonVersion = '2.9.8'
    reactorVersion = '3.2.6.RELEASE'
    reactorNettyVersion = '0.8.5.RELEASE'
    jetbrainsAnnotationsVersion = '17.0.0'
    eclipseCollectionsVersion = '9.2.0'
    mockitoVersion = '2.24.0'
    wiremockVersion = '2.21.0'
    assertjVersion = '3.12.0'
    jsonUnitAssertjVersion = '2.4.0'
    slf4jSimpleVersion = '1.7.25'
    slack = has('slackNotificationUrl')? slackNotificationUrl: ''
}

apply from: file('maven.gradle')

group = 'org.mikeneck.pixela'
version = '0.2'

subprojects {
    group = rootProject.group
    version = rootProject.version
}

repositories {
    mavenCentral()
    jcenter()
}

jacoco {
    toolVersion = '0.8.2'
}

task testReport(type: TestReport) {
    reportOn subprojects*.tasks*.withType(Test)
    destinationDir = file("$buildDir/reports/tests/test")
    group = 'verification'
}

task jacocoMerge(type: JacocoMerge) {
    group = 'coverage'

    dependsOn subprojects*.tasks*.withType(Test)

    executionData((tasks as TaskContainer).getByPath(':pixela-java-client-api:test'))
    executionData((tasks as TaskContainer).getByPath(':pixela-java-client-default-impl:test'))
    executionData((tasks as TaskContainer).getByPath(':pixela-java-client-java8-impl:test'))
    executionData((tasks as TaskContainer).getByPath(':integration-test:test'))
}

task jacocoReport(type: JacocoReport) {
    group = 'coverage'

    dependsOn 'jacocoMerge'

    def targetProjects = [
            ':pixela-java-client-api',
            ':pixela-java-client-default-impl',
            ':pixela-java-client-java8-impl',
            ':integration-test'
    ].collect {
        project(it)
    }

    executionData tasks.withType(JacocoMerge).findAll { it.name == 'jacocoMerge' }
    additionalSourceDirs files(targetProjects*.sourceSets*.main*.allSource*.srcDirs)
    additionalClassDirs files(targetProjects*.sourceSets*.main*.output)
    reports {
        xml.enabled = true
        xml.destination = file("$buildDir/reports/jacoco/report.xml")
        html.enabled = true
        html.destination = file("$buildDir/jacoco/report-html")
    }
}

task jacoco {
    group = 'coverage'
    dependsOn 'jacocoReport'
}

task qualityCheck {
    group = 'verification'
    dependsOn 'jacoco'
    finalizedBy 'testReport'
}

task localInstall(
        group: 'publish',
        dependsOn: [
                ':pixela-java-client-api:install',
                ':pixela-java-client-java8-impl:install',
                ':pixela-java-client-default-impl:install'])

if (canPublish) {
    task publish(
            group: 'publish',
            dependsOn: [
                    ':pixela-java-client-api:uploadArchives',
                    ':pixela-java-client-java8-impl:uploadArchives',
                    ':pixela-java-client-default-impl:uploadArchives'])
}

task dependencyUpdateCheck(
        type: DependencyUpdatesSlackNotificationTask,
        group: 'dependency-check',
        dependsOn: [
                ':pixela-java-client-api:dependencyUpdates',
                ':pixela-java-client-default-impl:dependencyUpdates',
                ':pixela-java-client-java8-impl:dependencyUpdates',
                ':integration-test:dependencyUpdates']) {
    dependencyUpdatesFiles = [
            'api',
            'default-impl',
            'pixela-java-client-java8-impl',
            'integration-test'
    ].collect {
        file("$projectDir/$it/build/dependencies/update-report.json")
    }
    slackUrl = slack
}
